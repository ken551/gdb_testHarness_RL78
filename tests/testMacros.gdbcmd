set $cases = 0
set $fails = 0
set $oks = 0
set print symbol off
set print elements 0

source tests\registerDefine.gdbcmd

source tests\testMacros.py

set $main = (int)&main
set $main_lsb = (char)($main & 0x000000FF)
set $main_msb = (char)(($main & 0x0000FF00) >> 8)

define outputFailInfo
    source tests\functions\outputFailInfo.py
end

define regAssertEq
    set $expected = $arg0
    set $addr = $arg1
    source tests\functions\regAssertEq.py
end


define intAssertEq
	set $was = $arg1
    set $expected = $arg0
    source tests\functions\intAssertEq.py
end

define defTest
    unset environment $testName
    set $testName = $arg0
    set $cases = ($cases + 1)
    set $assertNum = 0
    set $assertResult = 0
end

define regSetByte
    set {uint8_t}$arg0 = $arg1
end

define callFunc
    set $pyArg0 = $arg0
    if $argc >= 2
        set $pyArg1 = $arg1
    end
    if $argc >= 3
        set $pyArg2 = $arg2
    end
    if $argc >= 4
        set $pyArg3 = $arg3
    end
    if $argc >= 5
        set $pyArg4 = $arg4
    end
    source tests/funcCall.py
end

define testEnd
    if $assertResult != 0
        set $fails = ($fails + 1)
        printf "testcase "
        print $testName
        printf "failed\n"
    else
        set $oks = ($oks + 1)
    end
end